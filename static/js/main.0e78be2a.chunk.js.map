{"version":3,"sources":["components/DashBoard/styles.ts","components/Summary/styles.ts","assets/income.svg","assets/outcome.svg","assets/total.svg","services/api.ts","TransactionContext.tsx","components/Summary/index.tsx","components/TransictionsTable/styles.ts","components/TransictionsTable/index.tsx","components/DashBoard/index.tsx","components/Header/styles.ts","assets/logo.svg","components/Header/index.tsx","global.ts","components/NewTransactionModal/styles.ts","assets/close.svg","components/NewTransactionModal/index.tsx","App.tsx","index.tsx"],"names":["Container","styled","main","section","createServer","models","transaction","Model","seeds","server","db","loadData","transactions","id","title","type","category","amount","createdAt","Date","routes","this","namespace","get","schema","all","post","request","data","JSON","parse","requestBody","create","api","axios","baseURL","TransactionsContext","createContext","TransactionsProvider","children","useState","setTransactions","useEffect","then","response","createTransaction","transactionsInput","a","Provider","value","Summary","useContext","valuePositive","find","item","console","log","calculeValuePositive","valueNegative","calculeValueNegative","valueTotal","src","incomeImg","alt","Intl","NumberFormat","style","currency","format","outecomeImg","totalImg","div","TransactionsTable","map","className","DateTimeFormat","DashBoard","header","Header","onOpenNewTransactionModal","logo","onClick","GlobalStyle","createGlobalStyle","form","TransactionType","RadioBox","button","props","isActive","transparentize","isColor","Modal","setAppElement","NewTransactionModal","IsOpen","onRequestClose","setType","setTitle","setValue","setCategory","handleCreateNewTransaction","event","preventDefault","overlayClassName","isOpen","onSubmit","placeholder","onChange","e","target","closeImg","App","isNewTransactionModalOpen","setIsNewTransactionModalOpen","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e78be2a.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.main`\n  transform: translateY(-68px);\n  max-width: 1120px;\n  margin: 0 auto;\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.section`\n  display: flex;\n  justify-content: space-between;\n\n  div {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n    padding: 0 2rem;\n    width: 352px;\n    height: 136px;\n    background: var(--shape);\n    border-radius: 5px;\n\n    &:last-child {\n      background: var(--gren);\n      p{\n        color: var(--shape); \n      }\n      strong{\n          color: var(--shape);\n      }\n    }\n\n    header {\n      width: 100%;\n      display: flex;\n      justify-content: space-between;\n    }\n\n    strong {\n      font-size: 2.4rem;\n      font-weight: 500;\n      color: var(--titulo);\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/income.d58effe2.svg\";","export default __webpack_public_path__ + \"static/media/outcome.6eb96d30.svg\";","export default __webpack_public_path__ + \"static/media/total.e90c2d1e.svg\";","import axios from \"axios\";\nimport { create } from \"domain\";\nimport { createServer, Model } from \"miragejs\";\ncreateServer({\n  models: {\n    transaction: Model,\n  },\n\n  seeds(server) {\n    server.db.loadData({\n      transactions: [\n        { id: 1, title: `teste`, type: \"deposity\", category: `teste`, amount: 20, createdAt: new Date(`2021-02-12`) },\n        { id: 2, title: `teste`, type: \"withdraw\", category: `teste`, amount: 300, createdAt: new Date(`2021-02-12`) },\n      ],\n    });\n  },\n  routes() {\n    this.namespace = `api`;\n\n    this.get(\"/transactions\", () => {\n      return this.schema.all(\"transaction\");\n    });\n    this.post(\"/transactions\", (schema, request) => {\n      const data = JSON.parse(request.requestBody);\n\n      return schema.create(\"transaction\", data);\n    });\n  },\n});\n\nexport const api = axios.create({\n  baseURL: \"http://localhost:3000/api\",\n});\n","import { type } from \"os\";\nimport { createContext, ReactNode, useEffect, useState } from \"react\";\nimport { api } from \"./services/api\";\n\ninterface Transaction {\n  id: number;\n  title: string;\n  amount: number;\n  type: string;\n  category: string;\n  createdAt: string;\n}\ninterface TransactionsProviderProps {\n  children: ReactNode;\n}\ntype TransactionsInput = Omit<Transaction, \"id\" | \"createdAt\">;\n\ninterface TransactionContextData {\n  transactions: Transaction[];\n  createTransaction: (transaction: TransactionsInput) => Promise<void>;\n}\n\nexport const TransactionsContext = createContext<TransactionContextData>({} as TransactionContextData);\n\nexport const TransactionsProvider = ({ children }: TransactionsProviderProps) => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n\n  useEffect(() => {\n    api.get(\"/transactions\").then((response) => setTransactions(response.data.transactions));\n  }, []);\n\n  const createTransaction = async (transactionsInput: TransactionsInput) => {\n    const response = await api.post(\"/transactions\", {\n      ...transactionsInput,\n      createdAt: new Date(),\n    });\n\n    const { transaction } = response.data;\n\n    setTransactions([...transactions, transaction]);\n  };\n\n  return <TransactionsContext.Provider value={{ transactions, createTransaction }}>{children}</TransactionsContext.Provider>;\n};\n","import { Container } from \"./styles\";\nimport incomeImg from \"../../assets/income.svg\";\nimport outecomeImg from \"../../assets/outcome.svg\";\nimport totalImg from \"../../assets/total.svg\";\nimport { useContext } from \"react\";\nimport { TransactionsContext } from \"../../TransactionContext\";\n\nexport const Summary = () => {\n  const { transactions } = useContext(TransactionsContext);\n\n  const calculeValuePositive = () => {\n    let value = 0;\n\n    transactions.find((item) => {\n      if (item.type === \"deposity\") value += item.amount;\n\n      console.log(value);\n    });\n\n    return value;\n  };\n\n  const valuePositive = calculeValuePositive();\n\n  const calculeValueNegative = () => {\n    let value = 0;\n\n    transactions.find((item) => {\n      if (item.type === \"withdraw\") value += item.amount;\n    });\n\n    return value;\n  };\n\n  const valueNegative = calculeValueNegative();\n\n  const valueTotal = valuePositive - valueNegative;\n\n  return (\n    <Container>\n      <div>\n        <header>\n          <p>Entradas</p>\n          <img src={incomeImg} alt=\"Entradas\" />\n        </header>\n        <strong>\n          {new Intl.NumberFormat(\"pt-BR\", {\n            style: \"currency\",\n            currency: \"BRL\",\n          }).format(valuePositive)}\n        </strong>\n      </div>\n      <div>\n        <header>\n          <p>Saidas</p>\n          <img src={outecomeImg} alt=\"Saidas\" />\n        </header>\n        <strong>\n          -\n          {new Intl.NumberFormat(\"pt-BR\", {\n            style: \"currency\",\n            currency: \"BRL\",\n          }).format(valueNegative)}\n        </strong>\n      </div>\n      <div>\n        <header>\n          <p>Total</p>\n          <img src={totalImg} alt=\"Total\" />\n        </header>\n        <strong>\n          {valueTotal < 0\n            ? 0\n            : new Intl.NumberFormat(\"pt-BR\", {\n                style: \"currency\",\n                currency: \"BRL\",\n              }).format(valueTotal)}\n        </strong>\n      </div>\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  margin-top: 4rem;\n  table {\n    width: 100%;\n    border-spacing: 0 0.5rem;\n    th {\n      color: var(--texto);\n      font-weight: 400;\n      text-align: left;\n      padding: 1rem 2rem;\n      line-height: 1.5rem;\n    }\n\n    td {\n      padding: 1rem 2rem;\n      border: none;\n      background: var(--shape);\n      color: var(--texto);\n      border-radius: 0.25rem;\n\n      &:first-child {\n        color: var(--titulo);\n      }\n\n      &.withdraw {\n        color: var(--red);\n      }\n      &.deposity {\n        color: var(--gren);\n      }\n    }\n  }\n`;\n","import { useContext } from \"react\";\nimport { TransactionsContext } from \"../../TransactionContext\";\nimport { Container } from \"./styles\";\n\nexport const TransactionsTable = () => {\n  const { transactions } = useContext(TransactionsContext);\n\n  return (\n    <Container>\n      <table>\n        <thead>\n          <tr>\n            <th>Titulo</th>\n            <th>Preço</th>\n            <th>Categoria</th>\n            <th>Data</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {transactions.map((transaction) => {\n            return (\n              <tr key={transaction.id}>\n                <td>{transaction.title}</td>\n                <td className={transaction.type}>\n                  {new Intl.NumberFormat(\"pt-BR\", {\n                    style: \"currency\",\n                    currency: \"BRL\",\n                  }).format(transaction.amount)}\n                </td>\n                <td>{transaction.category}</td>\n                <td>{new Intl.DateTimeFormat(\"pt-BR\").format(new Date(transaction.createdAt))}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </Container>\n  );\n};\n","import { Container } from \"./styles\";\nimport { Summary } from \"../Summary\";\nimport { TransactionsTable } from \"../TransictionsTable\";\n\nexport const DashBoard = () => {\n  return (\n    <Container>\n      <Summary />\n      <TransactionsTable />\n    </Container>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.header`\n  background: var(--blue);\n  height: 212px;\n  width: 100%;\n  .container-center {\n    padding: 2rem 0px;\n    display: flex;\n    justify-content: space-between;\n    max-width: 1120px;\n    margin: 0 auto;\n\n    button {\n      color: var(--shape);\n      width: 195px;\n      height: 48px;\n      left: 1085px;\n      top: 32px;\n      outline: none;\n      border: none;\n      background: var(--blue-ligth);\n      border-radius: 5px;\n      transition: 300ms;\n      &:hover {\n        filter: brightness(0.8);\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/logo.614d71d1.svg\";","import * as S from \"./styles\";\nimport logo from \"../../assets/logo.svg\";\n\ninterface HeaderProps {\n  onOpenNewTransactionModal: () => void;\n}\n\nexport const Header = ({ onOpenNewTransactionModal }: HeaderProps) => {\n  return (\n    <S.Container>\n      <section className=\"container-center\">\n        <img src={logo} alt=\"\" />\n        <button type=\"button\" onClick={onOpenNewTransactionModal}>\n          Nova transação\n        </button>\n      </section>\n    </S.Container>\n  );\n};\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n\n:root{\n    --background:#F0F2F5;\n    --red:#E62E4D;\n    --blue:#5429CC;\n    --blue-ligth:#6933FF;\n    --gren:#33CC95;\n    --shape:#FFFFFF;\n    --titulo:#363F5F;\n    --texto:#969CB3;\n}\n*{\n    margin: 0px;\n    padding: 0px;\n    box-sizing: border-box;\n    font-family: 'Poppins', sans-serif;\n}\n\nbody{\n    width: 100vw;\n    height: 100vh;\n    background-color: var(--background);\n    -webkit-font-smoothing:antialiased;\n}\n\nhtml{\n    @media (max-width:1080px){\n        font-size: 93.75%;\n    }\n\n    @media (max-width:720px){\n        font-size: 87.5%;\n    }\n}\n\nbutton{\n    cursor: pointer;\n}\n[disabled]{\n    opacity: 0.7;\n    cursor: not-allowed;\n}\n.react-modal-overlay{\n    background-color: rgba(0,0,0,0.5);\n   position: fixed;\n   top: 0px;\n   left: 0px;\n   bottom: 0px;\n   right: 0px;\n   display: flex;\n   justify-content: center;\n   align-items: center;\n}\n.react-modal-content{\n  width: 100%;\n  max-width: 576px;\n  background: var(--background);\n  padding:3rem;\n  position: relative;\n  border-radius: 0.25rem;\n\n}\n\n`;\n\n\n","import { transparentize } from \"polished\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.form`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n\n  h1 {\n    color: var(--titulo);\n    font-size: 1.5rem;\n    margin-bottom: 2rem;\n  }\n\n  input {\n    width: 100%;\n    padding: 0 1.5rem;\n    height: 4rem;\n    border-radius: 0.25rem;\n    background: #e7e9ee;\n    border: 1px solid #d7d7d7;\n    font-weight: 400;\n    font-size: 1rem;\n    &::placeholder {\n      color: var(--texto);\n    }\n\n    & + input {\n      margin-top: 1rem;\n    }\n  }\n  .react-modal-button-close {\n    outline: none;\n    border: none;\n    position: absolute;\n    top: 21px;\n    right: 21px;\n    transition: 300ms;\n    &:hover {\n      filter: brightness(0.9);\n    }\n  }\n  button[type=\"submit\"] {\n    width: 100%;\n    padding: 0 1.5rem;\n    height: 4rem;\n    background: var(--gren);\n    color: #fff;\n    border-radius: 0.25rem;\n    border: none;\n    font-size: 1rem;\n    margin-top: 1.5rem;\n    transition: 300ms;\n    font-weight: 600;\n    &:hover {\n      filter: brightness(0.9);\n    }\n  }\n`;\n\nexport const TransactionType = styled.div`\n  width: 100%;\n  display: flex;\n  margin: 1rem 0px;\n`;\n\ninterface RadioBoxProps {\n  isActive: boolean;\n  isColor: \"#33CC95\" | \"#E62E4D\";\n}\n\nexport const RadioBox = styled.button<RadioBoxProps>`\n  border: 1px solid #d7d7d7;\n  background: ${(props) => (props.isActive ? transparentize(\"0.9\", props.isColor) : \"transparent\")};\n  outline: none;\n  display: flex;\n  flex: 1;\n  height: 64px;\n  justify-content: center;\n  align-items: center;\n  font-weight: 400;\n  font-size: 1rem;\n  color: var(--titulo);\n  border-radius: 0.25rem;\n  & + button {\n    margin-left: 8px;\n  }\n  img {\n    width: 20px;\n    height: 20px;\n    margin-right: 12px;\n  }\n\n  /* &:hover {\n  } */\n`;\n","export default __webpack_public_path__ + \"static/media/close.f62862c6.svg\";","import Modal from \"react-modal\";\nimport { FormEvent, useContext, useState } from \"react\";\nimport { Container, TransactionType, RadioBox } from \"./styles\";\nimport closeImg from \"../../assets/close.svg\";\nimport incomeImg from \"../../assets/income.svg\";\nimport outecomeImg from \"../../assets/outcome.svg\";\nimport { api } from \"../../services/api\";\nimport { TransactionsContext } from \"../../TransactionContext\";\n\nModal.setAppElement(\"#root\");\n\ninterface NewTransactionModalProps {\n  IsOpen: boolean;\n  onRequestClose: () => void;\n}\n\nexport const NewTransactionModal = ({ IsOpen, onRequestClose }: NewTransactionModalProps) => {\n  const { createTransaction } = useContext(TransactionsContext);\n\n  const [type, setType] = useState(\"deposity\");\n  const [title, setTitle] = useState(\"\");\n  const [value, setValue] = useState(0);\n  const [category, setCategory] = useState(\"\");\n\n  const handleCreateNewTransaction = async (event: FormEvent) => {\n    event.preventDefault();\n    if (title === \"\" || value === 0 || category === \"\") return;\n\n    await createTransaction({\n      title,\n      amount: value,\n      type,\n      category,\n    });\n    setTitle(\"\");\n    setCategory(\"\");\n    setValue(0);\n    setType(\"deposity\");\n    onRequestClose();\n  };\n\n  return (\n    <Modal className=\"react-modal-content\" overlayClassName=\"react-modal-overlay\" isOpen={IsOpen} onRequestClose={onRequestClose}>\n      <Container onSubmit={handleCreateNewTransaction}>\n        <h1>Cadastrar transação</h1>\n        <input\n          placeholder=\"Name\"\n          type=\"text\"\n          value={title}\n          onChange={(e) => {\n            setTitle(e.target.value);\n          }}\n        />\n        <input\n          placeholder=\"Valor\"\n          type=\"number\"\n          value={value}\n          onChange={(e) => {\n            setValue(+e.target.value);\n          }}\n        />\n\n        <TransactionType>\n          <RadioBox\n            onClick={(e) => {\n              e.preventDefault();\n              setType(\"deposity\");\n            }}\n            isActive={type === \"deposity\"}\n            isColor=\"#33CC95\"\n          >\n            <img src={incomeImg} alt=\"\" />\n            Entrada\n          </RadioBox>\n          <RadioBox\n            onClick={(e) => {\n              e.preventDefault();\n              setType(\"withdraw\");\n            }}\n            isActive={type === \"withdraw\"}\n            isColor=\"#E62E4D\"\n          >\n            <img src={outecomeImg} alt=\"\" />\n            Saida\n          </RadioBox>\n        </TransactionType>\n\n        <input\n          placeholder=\"Categoria\"\n          type=\"text\"\n          value={category}\n          onChange={(e) => {\n            setCategory(e.target.value);\n          }}\n        />\n\n        <button type=\"submit\">Cadastrar</button>\n        <button className=\"react-modal-button-close\" onClick={onRequestClose}>\n          <img src={closeImg} alt=\"\" />\n        </button>\n      </Container>\n    </Modal>\n  );\n};\n","import { DashBoard } from \"./components/DashBoard\";\nimport { Header } from \"./components/Header\";\nimport { GlobalStyle } from \"./global\";\n\nimport { useState } from \"react\";\nimport { NewTransactionModal } from \"./components/NewTransactionModal\";\nimport { TransactionsContext, TransactionsProvider } from \"./TransactionContext\";\n\nfunction App() {\n  const [isNewTransactionModalOpen, setIsNewTransactionModalOpen] = useState(false);\n\n  const handleOpenNewTransactionModal = () => {\n    setIsNewTransactionModalOpen(true);\n  };\n  const handleClosenNewTransactionModal = () => {\n    setIsNewTransactionModalOpen(false);\n  };\n\n  return (\n    <TransactionsProvider>\n      <Header onOpenNewTransactionModal={handleOpenNewTransactionModal} />\n      <DashBoard />\n      <GlobalStyle />\n      <NewTransactionModal IsOpen={isNewTransactionModalOpen} onRequestClose={handleClosenNewTransactionModal} />\n    </TransactionsProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}